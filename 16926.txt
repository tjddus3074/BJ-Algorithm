import java.io.IOException; //백준
import java.io.*;
//import java.util.StringTokenizer;
import java.util.*;

public class Main {

	static int n, m, k;
	static int r, c, num, spin;
	static int[] dx = {0, 1, 0, -1};
	static int[] dy = {1, 0, -1, 0};
	static int[][] map;
	static StringBuilder sb = new StringBuilder();

	static void Init() throws IOException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		st = new StringTokenizer(br.readLine());
		r = Integer.parseInt(st.nextToken());
		c = Integer.parseInt(st.nextToken());
		spin = Integer.parseInt(st.nextToken());
		map = new int[r][c];
		for(int i=0; i<r; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<c; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		num = Math.min(r,  c)/2;
		for(int i=0; i<spin; i++) {
			rotationMap();
		}
		
		resultprint();
	}
	
	static void rotationMap() {
		for (int n = 0; n < num; n++) {
			int temp = map[n][n];
			
			int index = 0;
			int lx = n;
			int ly = n;
			while(index < 4) {
				int nx = lx + dx[index];
				int ny = ly + dy[index];
				
				if(nx>=n && ny>=n && nx<r-n && ny < c-n) {
					map[lx][ly] =map[nx][ny];
					lx = nx;
					ly = ny;
				}
				else {
					index++;
				}
			}
			
			map[n+1][n] = temp;
		}
	}
	
	static void resultprint() {
		for(int i=0; i<r; i++) {
			for(int j=0; j<c; j++) {
				sb.append(map[i][j] + " ");
			}
			sb.append('\n');
		}
		sb.append('\n');
		System.out.print(sb.toString());
	}

	public static void main(String[] args) throws IOException {
		Init();
	}
}
