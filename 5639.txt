package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;

import java.math.*;

class Node{
	Node left;
	Node right;
	int val;
	public Node(int v) {
		this.val = v;
	}
}

public class Main {

	static int n, m, k;

	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		Node root = new Node(n);
		
		while(sc.hasNext()) {
			try {
				n = sc.nextInt();
				root = insertNode(root, n);
			}
			catch(Exception e) {
				break;
			}
		}
		
		postOrder(root);
	}
	
	static Node insertNode(Node node, int N) {
		Node current = null;
		if(node == null)
			return new Node(N);
		
		if(node.val > N) {
			current = insertNode(node.left, N);
			node.left = current;
		}
		else {
			current = insertNode(node.right, N);
			node.right = current;
		}
		return node;
	}
	
	static void postOrder(Node node) {
		if(node != null) {
			postOrder(node.left);
			postOrder(node.right);
			System.out.println(node.val);
		}
	}

	public static void main(String[] args) throws IOException {
		Init();
	}

}
