import java.io.IOException; //백준
import java.io.*;
import java.util.*;

//import java.math.*;

public class Main {

	static int n, m, k;

	static void Init() throws IOException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		k = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		while(k-- > 0) {
			ArrayList<Integer> list1 = new ArrayList<>();
			ArrayList<Integer> list2 = new ArrayList<>();
			
			st = new StringTokenizer(br.readLine());
			n = Integer.parseInt(st.nextToken());
			m = Integer.parseInt(st.nextToken());
			
			st = new StringTokenizer(br.readLine());
			for(int i=0; i<n; i++) 
				list1.add(Integer.parseInt(st.nextToken()));
			
			int feed_max = 0;
			int feed_min = Integer.MAX_VALUE;
			st = new StringTokenizer(br.readLine());
			for(int i=0; i<m; i++) {
				list2.add(Integer.parseInt(st.nextToken()));
				feed_max = Math.max(feed_max, list2.get(i));
				feed_min = Math.min(feed_min, list2.get(i));
			}
			
			Collections.sort(list1);
			Collections.sort(list2);
			int count = 0;
			int pivot = 0;
			for(int i=0; i<n; i++) {
				if(pivot == 0 && list2.get(pivot) >= list1.get(i))
					continue;
				while(true) {
					if(pivot == m) 
						break;
					if(list1.get(i) > list2.get(pivot))
						pivot++;
					else
						break;
				}
				count += pivot;
			}
			
			sb.append(count + "\n");
		}
		
		System.out.print(sb);
	}

	public static void main(String[] args) throws IOException {
		Init();
	}
}
