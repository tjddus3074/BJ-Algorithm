package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;

import java.math.*;

public class Main {

	static int n, m, k, h;
	static int[][] map;
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		h = Integer.parseInt(st.nextToken());
		
		map = new int[h+1][n];
		for(int i=0; i<m; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken())-1;
			int b = Integer.parseInt(st.nextToken())-1;
			
			map[a][b] = 1;
			map[a][b+1] = -1;
		}
		
		if(searchoddnum() > 3) {
			System.out.print(-1);;
			return;
		}else {
			for(int i=0; i<=3; i++) {
				if(dfs(0, 0, 0, i))
					return;
			}
		}
		System.out.println("-1");
	}
	
	static boolean dfs(int x, int y, int cnt, int size) {
		if(cnt == size) { 
			if(ladderCheck()) {
				System.out.println(size);
				return true;
			}
			return false;
		}
		
		for(int i=x; i<h; i++) {
			for(int j=y; j<n-1; j++) {
				if(map[i][j] != 0 || map[i][j+1] != 0)
					continue;
				
				map[i][j] = 1;
				map[i][j+1] = -1;
				if(dfs(i, j+2, cnt+1, size))
					return true;
				
				map[i][j] = 0;
				map[i][j+1] = 0;
			}
			y=0;
		}
		return false;
	}
	
	static boolean ladderCheck() {
		for(int j=0; j<n; j++) {
			int nx = 0; 
			int ny = j;
			
			while(nx <= h) {
				if(map[nx][ny] == 1)
					ny++;
				else if(map[nx][ny] == -1)
					ny--;
				nx++;
			}
			if(ny != j)
				return false;
		}
		return true;
	}
	
	static int searchoddnum() {
		int oddnum = 0;
		for(int j=0; j<n-1; j++) {
			int num = 0;
			for(int i=0; i<h; i++) {
				if(map[i][j] == 1) 
					num++;
			}
			if(num%2 == 1)
				oddnum ++;
		}
		return oddnum;
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}

}