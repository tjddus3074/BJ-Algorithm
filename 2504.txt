import java.io.IOException; //백준
import java.io.*;
//import java.util.StringTokenizer;
import java.util.*;

public class Main {
	
	static void Init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		String t = br.readLine();
		Stack<String> stack = new Stack<>();
		
		boolean isAble = true;
		for(int i=0; i<t.length(); i++) {
			String c= t.substring(i, i+1);
			
			if("(".equals(c)) {
				stack.push(")");
				continue;
			}
			
			if("[".equals(c)) {
				stack.push("]");
				continue;
			}
			
			int num = 0;
			while(true) {
				if(stack.isEmpty()) {
					isAble = false;
					break;
				}
				
				if(isNumber(stack.peek())) {
					num += Integer.parseInt(stack.pop());
				}
				else {
					if(isVPS(c, stack.peek())) {
						stack.pop();
						int T = (")".equals(c)) ? 2:3;
						
						if(num == 0)
							stack.push(String.valueOf(T));
						else
							stack.push(String.valueOf(T*num));
						break;
					}
					else {
						isAble = false;
						break;
					}
				}
			}
			
			if(!isAble)
				break;
		}
		
		int result = 0;
		
		while(!stack.isEmpty()) {
			if(isNumber(stack.peek())) {
				result += Integer.parseInt(stack.pop());
			}
			else {
				isAble = false;
				break;
			}
		}
		
		if(isAble) 
			System.out.println(result);
		else
			System.out.println(0);
	}
	
	public static boolean isVPS(String c, String t) {
		if(c.equals(t)) return true;
		return false;
	}
	
	public static boolean isNumber(String t) {
		if(t.equals(")") || t.equals("]")) return false;
		return true;
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}
}
