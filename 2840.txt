import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int[] nm = Arrays.stream(br.readLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        int n = nm[0];
        int k = nm[1];

        char[] wheel = new char[n]; // 바퀴
        Arrays.fill(wheel, '?');
        int arrow = 0; // 화살표
        boolean[] discover = new boolean['Z'-'A'+1];
        boolean possible = true;

        for (int i = 0; i < k; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int rot = Integer.parseInt(st.nextToken());
            char alpha = st.nextToken().charAt(0);

            arrow = (arrow + rot) % n;

            if (wheel[arrow] != '?' && wheel[arrow] != alpha || wheel[arrow] != alpha && discover[alpha-'A']) {
                possible = false;
                break;
            }

            wheel[arrow] = alpha;
            discover[alpha-'A'] = true;
        }

        if (possible) {
            StringBuilder answer = new StringBuilder();
            int t = arrow;
            for (int i = 0; i < n; i++) {
                t = arrow - i;
                if (t < 0) t += n;
                answer.append(wheel[t]);
            }
            System.out.print(answer);
        } else {
            System.out.print('!');
        }
    }
}
