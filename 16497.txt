import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.*;

class Node implements Comparable<Node>{

    int a;
    int b;

    public Node(int a, int b){
        this.a = a;
        this.b = b;
    }

    @Override
    public int compareTo(Node o) {
        return this.a - o.a;
    }
}

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        int n = Integer.parseInt(br.readLine());
        ArrayList<Node> list = new ArrayList<>();
        for(int i=0; i<n; i++){
            st = new StringTokenizer(br.readLine());
            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());

            list.add(new Node(a, b));
        }

        Collections.sort(list);
        int k = Integer.parseInt(br.readLine());

        int max = 0;
        int[] arr = new int[32];
        for(int i=0; i<n; i++){
            for(int j=list.get(i).a; j<list.get(i).b; j++)
                arr[j]++;
        }
        for(int i=0; i<arr.length; i++)
            max = Math.max(max, arr[i]);

        if(max>k)
            System.out.println(0);
        else
            System.out.println(1);
    }
}
