package studyjavapackage;

import java.io.IOException; //ë°±ì¤€
import java.io.*;
import java.util.*;

import java.math.*;

public class Main {

	static int n, m, k, h;
	static int parent[];
	static int unit[][];
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		k = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		while(k-- >0) {
			n = Integer.parseInt(br.readLine());
			
			parent = new int[n];
			unit = new int[n][3];
			
			for(int i=0; i<n; i++) {
				st = new StringTokenizer(br.readLine());
				int x, y, r;
				x = Integer.parseInt(st.nextToken());
				y = Integer.parseInt(st.nextToken());
				r = Integer.parseInt(st.nextToken());
				
				unit[i][0] = x;
				unit[i][1] = y;
				unit[i][2] = r;
				
				parent[i] = i;
			}
			
			int ans = n;
			for(int i=0; i<n; i++) {
				for(int j=i+1; j<n; j++) {
					int x_dif = unit[i][0] - unit[j][0];
					int y_dif = unit[i][1] - unit[j][1];
					int r = unit[i][2] + unit[j][2];
					
					if(x_dif * x_dif + y_dif * y_dif <= r*r) {
						if(find(i) != find(j)) {
							union(i, j);
							ans--;
						}
					}
				}
			}
			
			sb.append(ans + "\n");
		}
		System.out.print(sb);
	}
	
	static int find(int x) {
		if(x == parent[x]) {
			return x;
		}
		
		return parent[x] = find(parent[x]);
	}
	
	static void union(int x, int y) {
		x = find(x);
		y = find(y);
		
		if(x != y) {
			if(x<y)
				parent[y] = x;
			else
				parent[x] = y;
		}
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}

}