import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.security.cert.CRLSelector;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        int testcase = Integer.parseInt(br.readLine());
        for(int tc = 0; tc<testcase; tc++){
            int a =Integer.parseInt(br.readLine());
            st = new StringTokenizer(br.readLine());
            LinkedList<Integer> list1 = new LinkedList<>();
            for(int i=0; i<a; i++){
                int an = Integer.parseInt(st.nextToken());
                if(!list1.contains(an))
                    list1.add(an);
            }

            int b = Integer.parseInt(br.readLine());
            LinkedList<Integer> list2 = new LinkedList<>();
            st = new StringTokenizer(br.readLine());
            for(int i=0; i<b; i++){
                int bn = Integer.parseInt(st.nextToken());
                if(!list2.contains(bn))
                    list2.add(bn);
            }

            int c = Integer.parseInt(br.readLine());
            LinkedList<Integer> list3 = new LinkedList<>();
            st = new StringTokenizer(br.readLine());
            for(int i=0; i<c; i++){
                int cn = Integer.parseInt(st.nextToken());
                if(!list3.contains(cn))
                    list3.add(cn);
            }

            int count = 0;
            HashSet<String> result = new HashSet<>();
            for(int i=0; i<list1.size(); i++){
                for(int j=0; j<list2.size(); j++){
                    for(int k=0; k<list3.size(); k++){
                        int sum = list1.get(i) + list2.get(j) + list3.get(k);
                        String t = Integer.toString(sum);
                        int flag = 1;
                        for(int l=0; l<t.length(); l++){
                            if(!(t.charAt(l) == '5' || t.charAt(l) == '8')){
                                flag = 0;
                                break;
                            }
                        }
                        if(flag == 1 && !result.contains(t)) {
                            result.add(t);
                            count++;
                        }
                    }
                }
            }

            System.out.println(count);
        }
    }
}
