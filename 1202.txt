import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.Buffer;
import java.util.*;

class jly implements Comparable<jly> {
    int c;
    int v;

    public jly(int c, int v){
        this.c = c;
        this.v = v;
    }

    @Override
    public int compareTo(jly o){
        return this.c - o.c;
    }
}

public class Main {

    static boolean[] arr = new boolean[10001];

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int m = Integer.parseInt(st.nextToken());
        jly[] a = new jly[n];
        int[] bag = new int[m];

        for(int i=0; i<n; i++){
            st = new StringTokenizer(br.readLine());
            a[i] = new jly(Integer.parseInt(st.nextToken()), Integer.parseInt(st.nextToken()));
        }

        for(int i=0; i<m; i++){
            bag[i] = Integer.parseInt(br.readLine());
        }

        Arrays.sort(a);
        Arrays.sort(bag);

        Queue<Integer> q = new PriorityQueue<>();
        long ans = 0;
        int j = 0;
        for(int i=0; i<m; i++){
            while(j < n && a[j].c <= bag[i]) {
                q.add(-a[j].v);
                j++;
            }
            if(!q.isEmpty()){
                ans += Math.abs(q.poll());
            }
        }

        System.out.println(ans);
    }
}   
