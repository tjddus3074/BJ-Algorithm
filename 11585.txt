import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.*;

public class Main {

    static int[] a = new int[1048577];
    static int[] b = new int[1048577];
    static int n, cnt, limit;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        n = Integer.parseInt(br.readLine());
        st = new StringTokenizer(br.readLine());
        for(int i=0; i<n; i++){
            a[i] = Integer.parseInt(st.nextToken());
        }

        limit = Integer.parseInt(br.readLine());
        merge_sort(0, n-1);
        for(int i=0; i<n; i++){
            System.out.print(a[i] + " ");
        }
    }

    static void merge_sort(int s, int e){
        if(s == e)
            return;

        int mid = (s+e)/2;
        merge_sort(s, mid);
        merge_sort(mid+1, e);
        my_merge(s, e);
    }

    static void my_merge(int s, int e){
        if(e-s > n / limit) return;
        int mid = (s+e)/2;
        int i=s, j=mid+1, k=0;
        while(i <= mid && j<= e){
            if(a[i] <= a[j])
                b[k++] = a[i++];
            else
                b[k++] = a[j++];
        }
        while(i <= mid)
            b[k++] = a[i++];
        while(j <= e)
            b[k++] = a[j++];
        for(i=s; i<=e; i++)
            a[i] = b[i-s];
    }
}
