package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;

import java.math.*;

public class Main {

	static int n, m, k, h;
	static ArrayList<ArrayList<Integer>> list = new ArrayList<>();
	static int flag = 0;
	static boolean[] visit;
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		visit = new boolean[n];
		for(int i=0; i<n; i++) 
			list.add(new ArrayList<>());
		
		for(int i=0; i<m; i++) {
			int a, b;
			st = new StringTokenizer(br.readLine());
			a = Integer.parseInt(st.nextToken());
			b = Integer.parseInt(st.nextToken());
			list.get(a).add(b);
			list.get(b).add(a);
		}
		
		for(int i=0; i<n; i++) {
			dfs(i, 0);
			if(flag == 1)
				break;
		}
		
		System.out.print(flag);
	}
	
	static void dfs(int a, int num) {
		if(num == 4) {
			flag = 1;
			return;
		}
		
		if(flag == 1)
			return;
		
		visit[a] = true;
		for(int i=0; i<list.get(a).size(); i++) {
			int b =  list.get(a).get(i);
			if(visit[b])
				continue;
			
			dfs(b, num+1);
		}
		visit[a] = false;
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}

}