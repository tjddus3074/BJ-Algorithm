import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.*;

public class Main {

    static int[] dx = {-1, -1, -1, 0, 1, 1, 1, 0};
    static int[] dy = {-1, 0, 1, 1, 1, 0, -1, -1};
    static int a, b;
    static char[][] arr;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        while(true){
            st = new StringTokenizer(br.readLine());
            a = Integer.parseInt(st.nextToken());
            b = Integer.parseInt(st.nextToken());
            if(a == 0 && b == 0)
                break;

            arr = new char[a][b];
            for(int i=0; i<a; i++){
                String t = br.readLine();
                for(int j=0; j<b; j++){
                    arr[i][j] = t.charAt(j);
                }
            }

            for(int i=0; i<a; i++){
                for(int j=0 ;j<b; j++){
                    if(arr[i][j] == '.'){
                        int num = find(i, j);
                        arr[i][j] = Integer.toString(num).charAt(0);
                    }
                }
            }

            for(int i=0; i<a; i++){
                for(int j=0; j<b; j++){
                    System.out.print(arr[i][j]);
                }
                System.out.println();
            }
        }
    }

    static int find(int x, int y){
        int count =0 ;
        for(int i=0; i<8; i++){
            int nx = x + dx[i];
            int ny = y + dy[i];
            if(!isrange(nx, ny))
                continue;

            if(arr[nx][ny] == '*')
                count++;
        }

        return count;
    }

    static boolean isrange(int x, int y){
        if(x<0 || x>=a || y<0 || y>=b)
            return false;
        return true;
    }
}
