package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;

import java.math.*;

public class Main {

	static int n, m, k;
	static int[][] arr;
	static int px, py, pd;
	static int count = 0;
	static int[] dx = {0, 1, 1};
	static int[] dy = {1, 0, 1};
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		n = Integer.parseInt(br.readLine());
		arr = new int[n][n];
		px = 0;
		py = 1;
		pd = 0;
		
		for(int i=0; i<n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<n; j++)
				arr[i][j] = Integer.parseInt(st.nextToken());
		}
		
		dfs(px, py, pd);
		System.out.print(count);
	}
	
	static void dfs(int x, int y, int d) {
		
		if(x == n-1 && y == n-1) {
			count++;
			return;
		}
		
		if(d == 0) {
			for(int i=0; i<3; i++) {
				if(i == 1)
					continue;
				
				int nx = x + dx[i];
				int ny = y + dy[i];
				if(!isrange(nx, ny))
					continue;
				
				if(!ispossible(nx, ny, i))
					continue;
				
				dfs(nx, ny, i);
			}
		}
		else if (d == 1) {
			for (int i = 0; i < 3; i++) {
				if (i == 0)
					continue;
				
				int nx = x + dx[i];
				int ny = y + dy[i];
				if(!isrange(nx, ny))
					continue;
				
				if(!ispossible(nx, ny, i))
					continue;
				
				dfs(nx, ny, i);
			}
		}
		else if (d == 2) {
			for(int i=0; i<3; i++) {
				int nx = x+ dx[i];
				int ny = y + dy[i];
				if(!isrange(nx, ny))
					continue;
				
				if(!ispossible(nx, ny, i))
					continue;
				
				dfs(nx, ny, i);
			}
		}
	}
	
	static boolean isrange(int x, int y) {
		if(x<0 || x>=n || y<0 || y>=n)
			return false;
		return true;
	}
	
	static boolean ispossible(int x, int y, int d) {
		if(d == 0) {
			if(arr[x][y] == 1 || arr[x][y-1] == 1)
				return false;
		}
		else if(d == 1) {
			if(arr[x][y] == 1 || arr[x-1][y] == 1)
				return false;
		}
		else {
			if(arr[x][y] == 1 || arr[x-1][y-1] == 1 || arr[x-1][y] == 1
					|| arr[x][y-1] == 1)
				return false;
		}
		
		return true;
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}

}