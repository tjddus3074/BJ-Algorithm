import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.*;

public class Main {

    static int startValue = 1;
    static int[] moveX = {1, 0, -1, 0};
    static int[] moveY = {0, 1, 0, -1};
    static int kx, ky;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        int n = Integer.valueOf(br.readLine());
        int k = Integer.valueOf(br.readLine());
        int[][] result = getSnail(n, k);

        StringBuilder sb = new StringBuilder();
        for(int y = 0; y<n; y++){
            for(int x = 0; x<n; x++){
                int ele = result[y][x];
                sb.append(ele).append(" ");

                if(ele == k){
                    kx = x;
                    ky = y;
                }
            }

            sb.append("\n");
        }

        System.out.print(sb.toString());
        System.out.println((ky+1) + " "  + (kx+1));
    }

    static int[][] getSnail(int len, int k){
        int[][] arr = new int[len][len];
        int x = len/2;
        int y = len/2;
        arr[y][x] = startValue++;
        int endx = 0;
        int endy = 0;
        int drawCount = 1;

        while(true){
            for(int i=0; i<drawCount; i++){
                arr[--y][x] = startValue++;
                if(y == endy && x == endx){
                    return arr;
                }
            }

            for(int i=0; i<drawCount; i++){
                arr[y][++x] = startValue++;
            }

            drawCount ++;

            for(int i=0; i<drawCount; i++){
                arr[++y][x] = startValue++;
            }

            for(int i=0; i<drawCount; i++){
                arr[y][--x] = startValue++;
            }

            drawCount++;
        }
    }
}
