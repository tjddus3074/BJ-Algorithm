import java.io.IOException;   //백준
import java.io.*;
import java.util.StringTokenizer;
import java.util.LinkedList;
import java.util.Queue;

class Node{
	int x;
	int y;
	int day;
	
	public Node(int x, int y, int day) {
		this.x = x;
		this.y = y;
		this.day = day;
	}
}

public class Main{
	
	static int n, m;
	static int[][] arr;
	static Queue<Node> q = new LinkedList<Node>();
	static int[] dx = {0, 0, -1, 1};
	static int[] dy = {-1, 1, 0, 0};
	
	static void bfs() {
		int day = 0;
		
		while(!q.isEmpty()) {
			Node temp = q.poll();
			day = temp.day;
			
			for(int i=0; i<4; i++) {
				int nx = temp.x + dx[i];
				int ny = temp.y + dy[i];
				if(nx<0 || nx>=n || ny<0 || ny>=m)
					continue;
				
				if(arr[nx][ny] == 0) {
					arr[nx][ny] = 1;
					q.add(new Node(nx, ny, day+1));
				}
			}
		}
		
		if(check()) {
			System.out.print(day);
		}
		else
			System.out.print(-1);
	}
	
	static boolean check() {
		for(int i=0; i<n; i++) {
			for(int j=0; j<m; j++) {
				if(arr[i][j] == 0)
					return false;
			}
		}
		
		return true;
	}
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		m = Integer.parseInt(st.nextToken());
		n = Integer.parseInt(st.nextToken());
		arr = new int[n][m];
		
		for(int i=0; i<n; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=0; j<m; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
				if(arr[i][j] == 1)
					q.add(new Node(i, j, 0));
			}
		}
		
		bfs();
	}
}