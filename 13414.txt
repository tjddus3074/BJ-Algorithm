import java.io.IOException; //백준
import java.io.*;
//import java.util.StringTokenizer;
import java.util.*;

class Node implements Comparable<Node>{
	String t;
	int x;
	
	public Node(String t, int x) {
		this.t = t;
		this.x = x;
	}
	
	@Override
	public int compareTo(Node o) {
		if(this.x > o.x) return 1;
		else if(this.x < o.x) return -1;
		else return 0;
	}
}

public class Main {

	static int n, m, k;

	static void Init() throws IOException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		int count = 1;
		Map<String, Integer> map = new HashMap<>();
		for(int i=0; i<m; i++) {
			String t = br.readLine();
			if(!map.containsKey(t)) 
				map.put(t, count);
			else {
				map.remove(t);
				map.put(t, count);
			}
			count++;
		}
		
		ArrayList<Node> list = new ArrayList<>();
		Iterator<String> it = map.keySet().iterator();
		while(it.hasNext()) {
			String key = it.next();
			list.add(new Node(key, map.get(key)));
		}
		
		Collections.sort(list);
		if(list.size() <= n ) {
			for(int i=0; i<list.size(); i++)
				System.out.println(list.get(i).t);
		}
		else {
			for (int i = 0; i < n; i++) {
				System.out.println(list.get(i).t);
			}
		}
	}

	public static void main(String[] args) throws IOException {
		Init();
	}
}
