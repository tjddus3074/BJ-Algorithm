package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;
import java.util.Set;

import java.math.*;

public class Main {

	static int n, m;
	static long[][] arr;
	static long max = 100001 * 100000;
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		n = Integer.parseInt(br.readLine());
		m = Integer.parseInt(br.readLine());
		
		arr = new long[n+1][n+1];
		
		for(int i=0; i<=n; i++) 
			Arrays.fill(arr[i], max);
		
		for(int i=1; i<=n; i++)
			arr[i][i] = 0;
		
		//경로 입력
		for(int i=0; i<m; i++) {
			st = new StringTokenizer(br.readLine());
			int start = Integer.parseInt(st.nextToken());
			int end = Integer.parseInt(st.nextToken());
			int cost = Integer.parseInt(st.nextToken());
			
			arr[start][end] = Math.min(cost, arr[start][end]);
		}
		
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n; j++) {
				if(i != j) {
					for(int k=1; k<=n; k++) {
						if(j!=k && i!= k) {
							if(arr[j][k] > arr[j][i] + arr[i][k])
								arr[j][k] = arr[j][i] + arr[i][k];
						}
					}
				}
			}
		}
		
		StringBuilder sb = new StringBuilder();
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n; j++) {
				if(arr[i][j] == max)
					sb.append(0 + " ");
				else
					sb.append(arr[i][j] + " ");
			}
			sb.append("\n");
		}
		
		System.out.print(sb);
	}
	
	static void show() {
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n; j++) {
				System.out.print(arr[i][j] + " ");
			}
			System.out.print("\n");
		}
	}

	public static void main(String[] args) throws IOException {
		Init();
	}

}