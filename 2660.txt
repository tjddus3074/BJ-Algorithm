package studyjavapackage;

import java.io.IOException; //백준
import java.io.*;
import java.util.*;

import java.math.*;

public class Main {

	static int n, m, k, h;
	static ArrayList<ArrayList<Integer>> list = new ArrayList<>();
	static int flag = 0;
	static int min = Integer.MAX_VALUE;
	static int[] visit;
	static int[] arr;
	
	static void Init() throws IOException, NumberFormatException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
//		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());

		// char a = 'a'; 97
		// char A = 'A'; 65
		// char z = 'z'; 122
		
		n = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		for(int i=0; i<=n; i++)
			list.add(new ArrayList<>());
		
		arr = new int[n+1];
		
		while(true) {
			int a, b;
			st = new StringTokenizer(br.readLine());
			a = Integer.parseInt(st.nextToken());
			b = Integer.parseInt(st.nextToken());
			
			if(a == -1 && b == -1)
				break;
			
			list.get(a).add(b);
			list.get(b).add(a);
		}
		
		for(int i=1; i<=n; i++) {
			visit = new int[n+1];
			visit[i] = -1;
			dfs(i, 0);
			arr[i] = score();
			min = Math.min(min, arr[i]);
		}
		
		int num = 0;
		for(int i=1; i<=n; i++) {
			if(arr[i] == min) {
				num++;
				sb.append(i + " ");
			}
		}
		
		System.out.println(min + " " + num);
		System.out.print(sb);
		
	}
	
	static void dfs(int a, int num) {
		if(visit[a] != 0)
			visit[a] = Math.min(num, visit[a]);
		else if(visit[a] == 0 && num != 0)
			visit[a] = num;
		
		for(int i=0; i<list.get(a).size(); i++) {
			int b = list.get(a).get(i);
			if(visit[b] < num+1 && visit[b] > 0)
				continue;
			
			dfs(b, num+1);
		}
	}
	
	static int score() {
		int num = 0;
		for(int i=1; i<=n; i++) {
			
			num = Math.max(num, visit[i]);
		}
		
		return num;
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}

}