import java.io.IOException; //백준
import java.io.*;
//import java.util.StringTokenizer;
import java.util.*;
import java.math.BigInteger;

public class Main {

	static int n, m, k;
	static int[][] arr;
	static int[] brr;
	
	static int[][] map;
	static char[] cmap;
	static int result;
	

	static void Init() throws IOException {
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
//		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		StringTokenizer st;
		Scanner sc = new Scanner(System.in);
//		st = new StringTokenizer(br.readLine());
//		Integer.parseInt(st.nextToken());
		
		n = sc.nextInt();
		map = new int[n][n];
		
		for(int i=0; i<map.length; i++) {
			String c = sc.next();
			cmap = c.toCharArray();
			for(int j=0; j<map[i].length; j++) {
				if(cmap[j] == 'Y')
					map[i][j] = 1;
				else
					map[i][j] = 9999;
			}
		}
		
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				for(int k=0; k<n; k++) {
					if(i==j || j == k || k == i)
						continue;
					else if(map[i][j] > map[i][k] + map[k][j])
						map[i][j] = map[i][k] + map[k][j];
				}
			}
		}
		
		for(int i=0; i<map.length;i++) {
			int sum = 0;
			for(int j=0; j<map[i].length; j++) {
				if(i==j)continue;
				else if(map[i][j] <= 2)
					sum++;
			}
			result = Math.max(result, sum);
		}
		
		System.out.print(result);
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}
}
