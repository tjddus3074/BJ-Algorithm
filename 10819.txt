import java.io.IOException; //백준
import java.io.*;
//import java.util.StringTokenizer;
import java.util.*;

public class Main {
	
	static int n;
	static int[] arr;
	static int[] map;
	static boolean[] visit;
	static int max = Integer.MIN_VALUE;
	
	static void Init() throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		n = Integer.parseInt(br.readLine());
		arr = new int[n];
		map = new int[n];
		visit = new boolean[n];
		st = new StringTokenizer(br.readLine());
		for(int i=0; i<n; i++) 
			arr[i] = Integer.parseInt(st.nextToken());
		
		if(n == 1) {
			System.out.println(Math.abs(arr[0]));
			return;
		}
		else if(n==2) {
			int a = Math.max(Math.abs(arr[0] - arr[1]), Math.abs(arr[1]-arr[0]));
			System.out.println(a);
			return;
		}
		
		for(int i=0; i<n; i++) {
			visit[i] = true;
			map[0] = arr[i];
			bfs(1);
			visit[i] = false;
		}
		
		System.out.println(max);
	}
	
	static void bfs(int num) {	
		if(num>=n) {
			check();
			return;
		}
		for(int i=0; i<n; i++) {
			if(visit[i] == false) {
				visit[i] = true;
				map[num] = arr[i];
				bfs(num+1);
				visit[i] = false;
			}
		}
	}
	
	static void check() {
		int sum = 0;
		for(int i=1; i<n; i++) {
			sum += Math.abs(map[i] - map[i-1]);
		}
		max = Math.max(sum, max);
	}
	
	public static void main(String[] args) throws IOException {
		Init();
	}
}
